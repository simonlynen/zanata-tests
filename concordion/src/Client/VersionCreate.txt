= Client:Version:Create
:email: dchen@redhat.com
:revdate: 2013/01/31
:revnumber: 2.2

== attributes
:priority: P3
:status: CONFIRMED
:automated: 
:testplan_reference: Zanata-full
:categoryname: Functional
:component: 
:defaulttester: 
:role: projectMaintainer
:tag: 
:impact: Medium
:probability: Medium
:risk: 4
:taxonomy: 10120

== notes
Propose: Project maintainer should be able to create version with
@client@.

=== Feature to Be Tested
* Authentication check.
* Version create.

=== Feature NOT to Be Tested

== setup

=== Requires
* A project maintainer `@PMAINT@` and 
  a non-project maintainer `@NON_PMAINT@`.
* API keys is generated for both users.
* $HOME/.config/zanana.ini is setup for the project maintainer.
* A document project with following properties:
** ID: `@PROJ1@`
** Version: `@VER1@`

== action

In command line, do the following:

=== Non Project Maintainer Should Be Blocked
1. Non Project maintainer creates a version with
`@CLIENT_CMD@ @CMD_VERSION_CREATE@ @OPTION_VERSION@ @OPTION_PROJECT@ @OPTION_URL@ @OPTION_USERNAME_NON_PMAINT@ @OPTION_APIKEY_NON_PMAINT@`
  ? Should FAIL with error message which states that user is not a project maintainer.

=== Project Maintainer
1. Create the version without any option:
`@CLIENT_CMD@ @CMD_VERSION_CREATE@`
  ? Should FAIL with error message which shows that URL, Project Id and Version ID are needed.
2. Create project with only URL and version ID.
`@CLIENT_CMD@ @CMD_VERSION_CREATE@ @OPTION_VER1@ @OPTION_URL@`
  ? Should FAIL with error message which shows that Project Id is needed.
3. Create project with URL and version ID and project ID.
`@CLIENT_CMD@ @CMD_VERSION_CREATE@ @OPTION_VER1@ @OPTION_PROJ1@ @OPTION_URL@`
  ? Should succeed.

== expectedresults
Proceed as described in Action.

== breakdown

// vim: set syntax=asciidoc:

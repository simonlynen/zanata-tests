= Client:Project:Create
:email: dchen@redhat.com
:revdate: 2013/01/29
:revnumber: 2.2

== attributes
:priority: P3
:status: CONFIRMED
:automated: 
:testplan_reference: Zanata-full
:categoryname: Functional
:component: 
:defaulttester: 
:role: user
:tag: 
:impact: Medium
:probability: Medium
:risk: 4
:taxonomy: 10100

== notes
Propose: Any user should be able to create any project and user with 
@client@.

=== Feature to Be Tested
 * Create project.

=== Feature NOT to Be Tested

== setup

=== Requires
* A user role account.
* An API key is generated for the user.
* $HOME/.config/zanana.ini is NOT setup.
* Project Id such as @PROJ1@
* Project name such as @PROJ1NAME@
* Project description such as @PROJ1DESC@

== action

In command line:

=== Authentation 
1. Create project without any 
2. Click "More" -> "Glossary"
exp: Page "Glossary" should be loaded.

=== Upload PO Glossary file
1. Click "Upload".
2. Upload the po file using the file dialog.
exp: Upload should be succeed.
3. Look at the Glossary List. 
exp: Glossary should have Langauage c:assertEquals="hasGlossary(#Lang1)"[zh_TW].

=== Upload CSV Glossary file
1. Click "Upload".
2. Upload the csv file using the file dialog.
exp: Upload should be succeed.
3. Look at the Glossary List. 
$$$$
Glossary should have Langauage c:assertEquals="hasGlossary(#Lang2)"[es_ES].
and c:assertEquals="hasGlossary(#Lang3)"[zh_CN].
$$$$

== expectedresults
Proceed as described in Action.

== breakdown


// vim: set syntax=asciidoc:


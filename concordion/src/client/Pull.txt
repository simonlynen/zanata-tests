= Client:Pull
:email: dchen@redhat.com
:revdate: 2013/02/07
:revnumber: 2.2

== attributes
:priority: P2
:status: CONFIRMED
:automated: 
:testplan_reference: Zanata-full
:categoryname: Functional
:component: 
:defaulttester: 
:role: user
:tag: 
:impact: High
:probability: Medium
:risk: 6
:taxonomy: 10200

== notes
Propose: Only user should be able to pull
the source files and translation files with
@client@.

=== Feature to Be Tested
* Assume zanata.xml is corrected and completed.
* Authentication check.
* pullType default (trans)
* pullType both
* pullType trans
* locales default (all)
* locales 

=== Feature NOT to Be Tested
* Handle the incompleted zanata.xml
* File (New/Obsolete)
* Textflow (New/Obsolete)
* pullType source
* srcDir
* transDir
* userConfig
* modules support
* dryRun
* logHttp

== setup

=== Requires
* $HOME/.config/zanana.ini is setup for a user.
* A document project with following properties:
** ID: `@PROJ1@`
** Version: `@VER1@`
** Type: `@PROJTYPE1@`
** Has translation on `@LANG1@`
** Pushed to zanata
* zanata.xml is setup.

== action

In command line, do the following:

=== Non Project Maintainer Should Be Blocked
1. `mv $HOME/.config/zanana.ini $HOME/.config/zanana.ini.bak`

2. Non User push with
`@CLIENT_CMD@ @CMD_PUSH@ @OPTION_URL@`
exp: Should FAIL with error message which states that you need username and
apikey to perform pull

3. `mv $HOME/.config/zanana.ini.bak $HOME/.config/zanana.ini`

=== pullType source
1. Pull source and locale is @LANG1@
`@CLIENT_CMD@ @CMD_PULL@ @OPTION_URL@ @OPTION_PULL_TYPE_SOURCE@  @OPTION_LOCALE_LANG1@`
exp: Should FAIL with error message that state pullType source conflict with locale.

2. Pull source
`@CLIENT_CMD@ @CMD_PULL@ @OPTION_URL@ @OPTION_PULL_TYPE_SOURCE@`
exp: ONLY source should be pulled without error.

=== pullType default
1. Pull default
`@CLIENT_CMD@ @CMD_PULL@ @OPTION_URL@`
exp: Translation of all locales should be pulled without error.

2. Pull default and locale `@LANG1@`
`@CLIENT_CMD@ @CMD_PULL@ @OPTION_URL@ @OPTION_LOCALE_LANG1@`
exp: Translation of locale @LANG1@ should be pulled without error.

=== pullType trans

1. Pull trans and locale `@LANG1@`
`@CLIENT_CMD@ @CMD_PULL@ @OPTION_URL@ @OPTION_LOCALE_LANG1@`
exp: Translation of locale @LANG1@ should be pulled without error.

=== pullType both
1. Pull both
`@CLIENT_CMD@ @CMD_PULL@ @OPTION_URL@ @OPTION_PULL_TYPE_BOTH@`
exp: Source and translation of all locales should be pulled without error.

2. Pull default and locale `@LANG1@`
`@CLIENT_CMD@ @CMD_PULL@ @OPTION_URL@ @OPTION_PULL_TYPE_BOTH@ @OPTION_LOCALE_LANG1@`
exp: Source and translation of locale @LANG1@ should be pulled without error.

== expectedresults
Proceed as described in Action.

== breakdown


// vim: set syntax=asciidoc:

